#!/usr/bin/env python
'''
Query RDF data with SPARQL. Takes an RDF file as input and outputs the query
result as CSV.
'''
import argparse
import sys
from rdflib import Graph


main_parser = argparse.ArgumentParser(
    description=__doc__)


main_parser.add_argument(
    'files',
    help='',
    type=argparse.FileType('r'), nargs='*')
main_parser.add_argument(
    '-i', '--input-format',
    help='The format in which the input is in. Defaults to "turtle".',
    dest='input_format', nargs='?', default='turtle')
main_parser.add_argument(
    '-f', '--output-format',
    help='The format in which the output shall be serialized in. Defaults to "turtle".',
    dest='output_format', nargs='?', default='turtle')
main_parser.add_argument(
    '-o', '--output-file',
    help='The file the output shall be written to. Defaults to stdout.',
    dest='output_file', nargs='?', default=sys.stdout, type=argparse.FileType('w'))


def main(argv):
    args = main_parser.parse_args(argv)
    graph = Graph()
    for input_file in args.files:
        graph.parse(input_file, format=args.input_format)
    args.output_file.write(graph.serialize(format=args.output_format))


if __name__ == '__main__':
    main(sys.argv[1:])
